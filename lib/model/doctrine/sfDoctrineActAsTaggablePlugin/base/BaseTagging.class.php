<?php

/**
 * BaseTagging
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tag_id
 * @property string $taggable_model
 * @property string $taggable_id
 * @property Tag $Tag
 * 
 * @method integer getTag_id()         Returns the current record's "tag_id" value
 * @method string  getTaggable_model() Returns the current record's "taggable_model" value
 * @method string  getTaggable_id()    Returns the current record's "taggable_id" value
 * @method Tag     getTag()            Returns the current record's "Tag" value
 * @method Tagging setTag_id()         Sets the current record's "tag_id" value
 * @method Tagging setTaggable_model() Sets the current record's "taggable_model" value
 * @method Tagging setTaggable_id()    Sets the current record's "taggable_id" value
 * @method Tagging setTag()            Sets the current record's "Tag" value
 * 
 * @package    senat
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTagging extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tagging');
        $this->hasColumn('tag_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('taggable_model', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('taggable_id', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));


        $this->index('tag', array(
             'fields' => 
             array(
              0 => 'tag_id',
             ),
             ));
        $this->index('taggable', array(
             'fields' => 
             array(
              0 => 'taggable_model',
              1 => 'taggable_id',
             ),
             ));

        $this->setAttribute(Doctrine_Core::ATTR_EXPORT, Doctrine_Core::EXPORT_ALL ^ Doctrine_Core::EXPORT_CONSTRAINTS);

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Tag', array(
             'local' => 'tag_id',
             'foreign' => 'id'));
    }
}