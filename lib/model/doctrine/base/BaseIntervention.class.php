<?php

/**
 * BaseIntervention
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $nb_mots
 * @property string $md5
 * @property string $intervention
 * @property integer $timestamp
 * @property string $source
 * @property integer $seance_id
 * @property integer $section_id
 * @property enum $type
 * @property date $date
 * @property integer $personnalite_id
 * @property integer $parlementaire_id
 * @property string $fonction
 * @property Section $Section
 * @property Seance $Seance
 * @property Personnalite $Personnalite
 * @property Parlementaire $Parlementaire
 * 
 * @method integer       getNb_mots()          Returns the current record's "nb_mots" value
 * @method string        getMd5()              Returns the current record's "md5" value
 * @method string        getInterventIon()     Returns the current record's "intervention" value
 * @method integer       getTimesTamp()        Returns the current record's "timestamp" value
 * @method string        getSource()           Returns the current record's "source" value
 * @method integer       getSeance_id()        Returns the current record's "seance_id" value
 * @method integer       getSection_id()       Returns the current record's "section_id" value
 * @method enum          getType()             Returns the current record's "type" value
 * @method date          getDate()             Returns the current record's "date" value
 * @method integer       getPersonnalite_id()  Returns the current record's "personnalite_id" value
 * @method integer       getParlementaire_id() Returns the current record's "parlementaire_id" value
 * @method string        getFonction()         Returns the current record's "fonction" value
 * @method Section       getSection()          Returns the current record's "Section" value
 * @method Seance        getSeance()           Returns the current record's "Seance" value
 * @method Personnalite  getPersonnalite()     Returns the current record's "Personnalite" value
 * @method Parlementaire getParlementaire()    Returns the current record's "Parlementaire" value
 * @method Intervention  setNb_mots()          Sets the current record's "nb_mots" value
 * @method Intervention  setMd5()              Sets the current record's "md5" value
 * @method Intervention  setInterventIon()     Sets the current record's "intervention" value
 * @method Intervention  setTimesTamp()        Sets the current record's "timestamp" value
 * @method Intervention  setSource()           Sets the current record's "source" value
 * @method Intervention  setSeance_id()        Sets the current record's "seance_id" value
 * @method Intervention  setSection_id()       Sets the current record's "section_id" value
 * @method Intervention  setType()             Sets the current record's "type" value
 * @method Intervention  setDate()             Sets the current record's "date" value
 * @method Intervention  setPersonnalite_id()  Sets the current record's "personnalite_id" value
 * @method Intervention  setParlementaire_id() Sets the current record's "parlementaire_id" value
 * @method Intervention  setFonction()         Sets the current record's "fonction" value
 * @method Intervention  setSection()          Sets the current record's "Section" value
 * @method Intervention  setSeance()           Sets the current record's "Seance" value
 * @method Intervention  setPersonnalite()     Sets the current record's "Personnalite" value
 * @method Intervention  setParlementaire()    Sets the current record's "Parlementaire" value
 * 
 * @package    senat
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIntervention extends ObjectCommentable
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('intervention');
        $this->hasColumn('nb_mots', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('md5', 'string', 36, array(
             'type' => 'string',
             'unique' => true,
             'length' => 36,
             ));
        $this->hasColumn('intervention', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('timestamp', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('source', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('seance_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('section_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'commission',
              1 => 'question',
              2 => 'loi',
             ),
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('personnalite_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('parlementaire_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('fonction', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));


        $this->index('date_intervention', array(
             'fields' => 
             array(
              0 => 'date',
             ),
             ));
        $this->index('ft_intervention', array(
             'fields' => 
             array(
              0 => 'intervention',
             ),
             'type' => 'fulltext',
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Section', array(
             'local' => 'section_id',
             'foreign' => 'id'));

        $this->hasOne('Seance', array(
             'local' => 'seance_id',
             'foreign' => 'id'));

        $this->hasOne('Personnalite', array(
             'local' => 'personnalite_id',
             'foreign' => 'id'));

        $this->hasOne('Parlementaire', array(
             'local' => 'parlementaire_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $taggable0 = new Taggable();
        $solrable0 = new Solrable(array(
             'description' => 
             array(
              0 => 'Parlementaire',
              1 => 'Personnalite',
              2 => 'intervention',
             ),
             'moretags' => 
             array(
              0 => 'Parlementaire',
              1 => 'Personnalite',
              2 => 'type',
             ),
             'devaluate_if_wordcount_under' => 200,
             'date' => 'full_date',
             ));
        $this->actAs($timestampable0);
        $this->actAs($taggable0);
        $this->actAs($solrable0);
    }
}