<?php

/**
 * BaseCitoyen
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string                             $login                                    Type: string(128), unique
 * @property string                             $password                                 Type: string(40)
 * @property string                             $email                                    Type: string(255), unique
 * @property string                             $activite                                 Type: string(255)
 * @property string                             $url_site                                 Type: string(255)
 * @property bool                               $employe_an                               Type: boolean
 * @property int                                $travail_pour                             Type: integer
 * @property string                             $naissance                                Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @property string                             $sexe                                     Type: enum, Possible values (, H, F)
 * @property string                             $nom_circo                                Type: string(255)
 * @property int                                $num_circo                                Type: integer
 * @property object                             $photo                                    Type: blob
 * @property string                             $activation_id                            Type: string(32)
 * @property bool                               $is_active                                Type: boolean
 * @property string                             $role                                     Type: enum, default "membre", Possible values (MEMBRE, MODERATEUR, ADMIN)
 * @property string                             $last_login                               Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @property string                             $parametres                               Type: string
 * @property Doctrine_Collection|Commentaire[]  $Commentaires                             
 * @property Doctrine_Collection|Rate[]         $Rates                                    
 * @property Doctrine_Collection|Article[]      $Articles                                 
 * @property Doctrine_Collection|Alerte[]       $Alertes                                  
 *  
 * @method string                               getLogin()                                Type: string(128), unique
 * @method string                               getPassword()                             Type: string(40)
 * @method string                               getEmail()                                Type: string(255), unique
 * @method string                               getActivite()                             Type: string(255)
 * @method string                               getUrlSite()                              Type: string(255)
 * @method bool                                 getEmployeAn()                            Type: boolean
 * @method int                                  getTravailPour()                          Type: integer
 * @method string                               getNaissance()                            Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @method string                               getSexe()                                 Type: enum, Possible values (, H, F)
 * @method string                               getNomCirco()                             Type: string(255)
 * @method int                                  getNumCirco()                             Type: integer
 * @method object                               getPhoto()                                Type: blob
 * @method string                               getActivationId()                         Type: string(32)
 * @method bool                                 getIsActive()                             Type: boolean
 * @method string                               getRole()                                 Type: enum, default "membre", Possible values (MEMBRE, MODERATEUR, ADMIN)
 * @method string                               getLastLogin()                            Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @method string                               getParametres()                           Type: string
 * @method Doctrine_Collection|Commentaire[]    getCommentaires()                         
 * @method Doctrine_Collection|Rate[]           getRates()                                
 * @method Doctrine_Collection|Article[]        getArticles()                             
 * @method Doctrine_Collection|Alerte[]         getAlertes()                              
 *  
 * @method Citoyen                              setLogin(string $val)                     Type: string(128), unique
 * @method Citoyen                              setPassword(string $val)                  Type: string(40)
 * @method Citoyen                              setEmail(string $val)                     Type: string(255), unique
 * @method Citoyen                              setActivite(string $val)                  Type: string(255)
 * @method Citoyen                              setUrlSite(string $val)                   Type: string(255)
 * @method Citoyen                              setEmployeAn(bool $val)                   Type: boolean
 * @method Citoyen                              setTravailPour(int $val)                  Type: integer
 * @method Citoyen                              setNaissance(string $val)                 Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @method Citoyen                              setSexe(string $val)                      Type: enum, Possible values (, H, F)
 * @method Citoyen                              setNomCirco(string $val)                  Type: string(255)
 * @method Citoyen                              setNumCirco(int $val)                     Type: integer
 * @method Citoyen                              setPhoto(object $val)                     Type: blob
 * @method Citoyen                              setActivationId(string $val)              Type: string(32)
 * @method Citoyen                              setIsActive(bool $val)                    Type: boolean
 * @method Citoyen                              setRole(string $val)                      Type: enum, default "membre", Possible values (MEMBRE, MODERATEUR, ADMIN)
 * @method Citoyen                              setLastLogin(string $val)                 Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @method Citoyen                              setParametres(string $val)                Type: string
 * @method Citoyen                              setCommentaires(Doctrine_Collection $val) 
 * @method Citoyen                              setRates(Doctrine_Collection $val)        
 * @method Citoyen                              setArticles(Doctrine_Collection $val)     
 * @method Citoyen                              setAlertes(Doctrine_Collection $val)      
 *  
 * @package    cpc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCitoyen extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('citoyen');
        $this->hasColumn('login', 'string', 128, array(
             'type' => 'string',
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('activite', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url_site', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('employe_an', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('travail_pour', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('naissance', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('sexe', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => NULL,
              1 => 'H',
              2 => 'F',
             ),
             ));
        $this->hasColumn('nom_circo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('num_circo', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('photo', 'blob', null, array(
             'type' => 'blob',
             ));
        $this->hasColumn('activation_id', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('role', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'membre',
              1 => 'moderateur',
              2 => 'admin',
             ),
             'default' => 'membre',
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('parametres', 'string', null, array(
             'type' => 'string',
             ));


        $this->index('is_active', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
        $this->index('role', array(
             'fields' => 
             array(
              0 => 'role',
             ),
             ));
        $this->index('created_at', array(
             'fields' => 
             array(
              0 => 'created_at',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Commentaire as Commentaires', array(
             'local' => 'id',
             'foreign' => 'citoyen_id'));

        $this->hasMany('Rate as Rates', array(
             'local' => 'id',
             'foreign' => 'citoyen_id'));

        $this->hasMany('Article as Articles', array(
             'local' => 'id',
             'foreign' => 'citoyen_id'));

        $this->hasMany('Alerte as Alertes', array(
             'local' => 'id',
             'foreign' => 'citoyen_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'login',
             ),
             'unique' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}