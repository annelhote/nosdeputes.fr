<?php

/**
 * BasePreuvePresence
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int             $presence_id               Type: integer
 * @property string          $type                      Type: enum, Possible values (JO, INTERVENTION, COMPTE-RENDU, SCRUTIN, AUTRE)
 * @property string          $source                    Type: string(200)
 * @property Presence        $Presence                  
 *  
 * @method int               getPresenceId()            Type: integer
 * @method string            getType()                  Type: enum, Possible values (JO, INTERVENTION, COMPTE-RENDU, SCRUTIN, AUTRE)
 * @method string            getSource()                Type: string(200)
 * @method Presence          getPresence()              
 *  
 * @method PreuvePresence    setPresenceId(int $val)    Type: integer
 * @method PreuvePresence    setType(string $val)       Type: enum, Possible values (JO, INTERVENTION, COMPTE-RENDU, SCRUTIN, AUTRE)
 * @method PreuvePresence    setSource(string $val)     Type: string(200)
 * @method PreuvePresence    setPresence(Presence $val) 
 *  
 * @package    cpc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePreuvePresence extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('preuve_presence');
        $this->hasColumn('presence_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'jo',
              1 => 'intervention',
              2 => 'compte-rendu',
              3 => 'scrutin',
              4 => 'autre',
             ),
             ));
        $this->hasColumn('source', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Presence', array(
             'local' => 'presence_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}