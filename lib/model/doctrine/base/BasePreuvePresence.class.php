<?php

/**
 * BasePreuvePresence
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $presence_id
 * @property enum $type
 * @property string $source
 * @property Presence $Presence
 * 
 * @method integer        getPresence_id() Returns the current record's "presence_id" value
 * @method enum           getType()        Returns the current record's "type" value
 * @method string         getSource()      Returns the current record's "source" value
 * @method Presence       getPresence()    Returns the current record's "Presence" value
 * @method PreuvePresence setPresence_id() Sets the current record's "presence_id" value
 * @method PreuvePresence setType()        Sets the current record's "type" value
 * @method PreuvePresence setSource()      Sets the current record's "source" value
 * @method PreuvePresence setPresence()    Sets the current record's "Presence" value
 * 
 * @package    senat
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePreuvePresence extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('preuve_presence');
        $this->hasColumn('presence_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'jo',
              1 => 'intervention',
              2 => 'compte-rendu',
              3 => 'autre',
             ),
             ));
        $this->hasColumn('source', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Presence', array(
             'local' => 'presence_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}